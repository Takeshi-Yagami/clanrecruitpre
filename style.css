html{
    scroll-behavior: smooth !important;
    font-size: 12px;
}
body{
    width: 100%;
    margin: 0;
    padding: 0;
      font-family: "Helvetica Neue",
    Arial,
    "Hiragino Kaku Gothic ProN",
    "Hiragino Sans",
    Meiryo,
    sans-serif;
}

@keyframes showTextFromBottom{ /*共通登場ANM*/
  0%{
    transform: translateY( 100% );
  }
  100%{
    transform: translateY( 0px );
  }
}
.AddOpenAnimation.displayed span{
  animation: showText 1s backwards;
  display: inline-block;
}
.AddOpenAnimation.displayed > span{
  overflow: hidden;
}
.AddOpenAnimation.displayed > span > span{
  animation: showTextFromBottom 0.5s backwards;
}

.RECheader{
    height: 100px;
    background-color: #ffffff;
}


/* hero ////////////////////////////////////////////////////////////////////////////////////////////////////*/
.REChero{
    position: relative;;
    height: calc(100vh - 100px);
    background-image: url("static/bgblackpre.png");
    object-fit: cover;
    background-size: cover;
    
}
.RECheroArea{
    position: absolute;
    animation: slideIn 1.6s forwards; /* slideInアニメーションを適用 */
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
    transform: translateX(-100%); /* 初期位置を左画面外に設定 */
    background-color: #f20000;
    top: 10%;
    height: 80%;
    width: 85%;
    max-width: 1800px;
}
.RECheroAreaContent{
    display: flex;
    flex-direction: row;
    height: 100%;
}
/* 左側 */
.RECheroAreaLeft{
    display: flex;
    flex-direction: column;
    justify-content: center;
    width: 50%;
}
.RECheroAreaLeftCC{
    display: flex;
    flex-direction: column;
    width: 80%;
    margin: 0 auto;
    margin-bottom: 10%;
    font-size: 2.5rem;
}
.RECheroAreaLeftCCJP{
    font-weight: 700;
    font-size: 1.5rem;
    color: #ffffff;
    width: 80%;
    margin: 0 auto;
    opacity: 0;
    animation: display 1s forwards;
    animation-delay: 1s; 
}
.animated-text {
    white-space: nowrap; /* テキストが途中で改行されないようにする */
    animation: slideIn 1.7s forwards; /* slideInアニメーションを適用 */
    transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);
    transform: translateX(-100%); /* 初期位置を左画面外に設定 */
    opacity: 0; /* 初期状態で透明 */
    font-weight: 700;
    font-size: 50px;
    color: #ffffff;
    line-height: 1em;
}
/* 複数の文字要素がある場合の例 */
.animated-text.delay-1 { animation-delay: 0.3s; }
.animated-text.delay-2 { animation-delay: 0.5s; }
.animated-text.delay-3 { animation-delay: 0.6s; }
.animated-text.delay-4 { animation-delay: 0.7s; }

/* アニメーションの定義 */
@keyframes slideIn {
    0% {
        transform: translateX(-100%); /* 左画面外 */
        opacity: 0;
    }
    10% { /* 少し早めに表示開始 */
        opacity: 1;
    }
    100% {
        transform: translateX(0); /* 元の位置 */
        opacity: 1;
    }
}
@keyframes display {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

/* hero右側 ////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECheroAreaRight{
    width: 50%;
    display: flex;
    flex-direction: column;
    opacity: 0;
    animation: display 0.5s ease-out forwards;
    animation-delay: 1s;
}
.RECheroAreaLogoBox{
    height: 20%;
    display: flex;
    justify-content: end;
    padding-right: 5%;
}
.RECheroAreaLogo{
    height: 60%;
    margin: auto 0;
}
.RECheroAreaNav{ /*heroのリンク用を格納*/
    height: 60%;
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.RECheroAreaNavItems{ /*heroのリンク*/
    width: max-content;
    font-weight: 400;
    font-size: 2rem;
    line-height: 3rem;
    margin-left: 5rem;
    text-decoration: none;
    color: #ffffff;
    position: relative;
    transition: .3s;
}
.RECheroAreaNavItems::before{
    content: '';
    width: 8px;
    height: 8px;
    margin-top: -5px;
    border-top: solid 1px #ffffff;
    border-right: solid 1px #ffffff;
    transform: rotate(45deg);
    position: absolute;
    top: 55%;
    left: -20px;
}
.RECheroAreaNavItems::after { /*heroのリンク用下線*/
    content: '';
    display: block;
    height: 1px;
    width: 0%;
    background: #ffffff;
    position: absolute;
    bottom: 5px;
    left: 0%;
    transition: .3s;
}
.RECheroAreaNavItems:hover {
    color: #ffffff;
    margin-left: 6rem;
}
.RECheroAreaNavItems:hover::before{
    border-top: solid 1px #ffffff;
    border-right: solid 1px #ffffff;
}
.RECheroAreaNavItems:hover::after {
    width: 100%; 
}
.RECbuttonBox{
    height: 20%;
display: grid;
  align-items: center;
}


/*事業概要 ////////////////////////////////////////////////////////////////////////////////////////////////////*/

.RECaboutUsSection{
    max-width: 2048px;
}
.RECaboutUsSectionTitleBoxBox{
      height: 700px;  
}
.RECaboutUsSectionTitleBox{
    position: relative;
    height: 200px;
    background-image: url(static/pattern.jpg);
    background-repeat: repeat;
    padding-top: 2em;

}

/*PDFスライダー///////////////////////////////*/
/* ==================================== */
/* カルーセル全体のコンテナとラッパー */
/* ==================================== */
.carousel-container {
  position: relative;
  width: 100%;
  height: calc(100vw * 0.5625);
  margin: -12rem auto 0;
  overflow: hidden;
  box-sizing: border-box;
}

.carousel-wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 0%;
  transform: translate(-50%, -50%);
  transition: transform 0.5s ease;
  white-space: nowrap;
}

/* ==================================== */
/* 画像とラッパーのスタイル */
/* ==================================== */
.image-wrapper {
  width: 25vw;
  aspect-ratio: 16 / 9;
  margin: 0 -2.5vw;
  position: relative;
  transition: all 0.5s ease;
  z-index: 1;
  overflow: hidden;
}

.image-wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 8px;
}

/* ==================================== */
/* アクティブ画像と非アクティブ画像のスタイル */
/* ==================================== */
.image-wrapper:not(.active) {
  filter: brightness(0.6);
  opacity: 0.7;
}

.image-wrapper.active {
  width: 50vw;
  aspect-ratio: 16 / 9;
  filter: brightness(1);
  opacity: 1;
  z-index: 2;
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);
}

/* ==================================== */
/* ボタンのスタイル */
/* ==================================== */
.nav-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  background-color: #fff;
  border: none;
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease, transform 0.3s ease;
}


.nav-button:hover {
  background-color: #f0f0f0;
  transform: translateY(-50%) scale(1.1);
}

.nav-button.prev {
  left: 20px;
}

.nav-button.next {
  right: 20px;
}





.RECgaiyou{
    display: block;
}
.RECgaiyouBox {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 90%;
    margin: 0 auto;
}
.RECgaiyouBlock{
    width: 30%;
    background-color: #ffffff;
    box-shadow: 0px 0px 20px #000000;
}
.RECgaiyouBlock > img {
    width: 100%;
}
.RECgaiyouCaptionBox{
    margin: 1% 2% 2% 2%;
}
.RECgaiyouCaption{
    font-size: 32px;
    font-weight: 600;
}
.RECgaiyouCaptionJP{
    font-size: 20px;
    font-weight: 400; 
}
.RECgaiyouExplain{
    font-size: 13px;
    font-weight: 400; 
    margin-top: 3%;
    margin-bottom: 3%;
}

/*メンバー////////////////////////////////////////////////////////////////////////////////////////////////////*/
/* slider-wrapper: スライダー全体のコンテナ */
.RECmemberSwipeBox {
    position: relative;
    width: 80%; /* 画面幅の80%に設定 */
    margin: 0 auto; /* 中央に配置 */
    overflow: hidden;
    padding-left: 40px;
    padding-right: 40px;
}

/* slider-container: メンバーカードを横に並べる */
.slider-container {
    display: flex;
    transition: transform 0.5s ease;
}

/* member-card: 各メンバーカードのスタイル */
.member-card {
    flex: 0 0 120px;
    height: 250px; /* 高さを調整 */
    margin: 0 5px;
    padding: 0; /* paddingをなくす */
    background-color: #f0f0f0;
    border-radius: 10px;
    text-align: center;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
    position: relative;
    transform-origin: center center;
    overflow: hidden; /* 画像がはみ出さないように */
    cursor: pointer;
}
.member-card::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 50%; /* グラデーションの高さ */
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7) 0%, rgba(0, 0, 0, 0) 100%);
    z-index: 1; /* 画像とテキストの間に配置 */
}

.member-card:hover {
    transform: scale(1.1); /* 拡大率を少し小さく */
    z-index: 20;
}

.member-card img {
    width: 100%; /* 親要素の幅いっぱいに */
    height: 100%; /* 親要素の高さいっぱいに */
    object-fit: cover;
    border-radius: 10px; /* カードの角丸に合わせる */
    transition: opacity 0.3s ease;
}

.member-card:hover img {
    opacity: 0.5; /* ホバー時に画像を暗く */
}

/* メンバー名と役職のスタイル */
.member-card h3,
.member-card > p {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2; /* 画像より手前に配置 */
    color: white;
    text-shadow: 3px 3px 4px rgba(0,0,0,0.7); /* 文字を読みやすく */
    background: none; /* 背景をなくす */
    padding: 0;
    margin: 0;
    transition: all 0.3s ease;
}
.member-card h3{
        width: 90%;
    bottom: 20%; /* カード下部に配置 */
}
.member-card > p {
    width: 90%;
    bottom: 10%;
    font-size: 0.8rem;
}

/* slider-button: 左右の矢印ボタン */
.slider-button {
    position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  background-color: #fff;
  border: none;
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease, transform 0.3s ease;
}
.slider-button:hover {
  background-color: #f0f0f0;
  transform: translateY(-50%) scale(1.1);
}

#prevBtn {
    left: 0;
}

#nextBtn {
    right: 0;
    z-index: 30;
}

/* 詳細表示 */
.member-card .detail {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0; /* 初期状態は非表示 */
    transition: opacity 0.3s ease;
    z-index: 3; /* ホバー時に前面に表示 */
}

.member-card:hover .detail {
    opacity: 1;
}

.member-card .detail p {
    font-size: 0.8rem;
    margin: 5px;
    color: white;
}

/*福利厚生////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECpositionSection{
    padding-top: 5rem;
}
.RECenvironmentCaption{
    width: 60%;
    margin: 0 auto;
}
.RECenvironmentBox{
    width: 100%;
    display: flex;
    justify-content: center;
}
.grid-container {
    width: 60%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 10px;
}

.grid-item {
    border: 2px solid #333;
    padding-bottom: 65%;
    position: relative;
    box-sizing: border-box;
    overflow: hidden; /* ホバー時の説明文のはみ出しを隠す */
    cursor: pointer; /* ホバー時にカーソルを変更してインタラクティブであることを示す */

    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    transition: transform 0.3s ease-in-out; /* ホバー時のアニメーション */
}

/* nth-childを使用して、各ボックスに背景画像を設定 */
.grid-item:nth-child(1) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(2) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(3) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(4) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(5) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(6) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(7) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(8) { background-image: url('static/ko-pore-to.png'); }
.grid-item:nth-child(9) { background-image: url('static/ko-pore-to.png'); }

.grid-item h3 {
    position: absolute;
    left: 0; /* 左端に揃える */
    bottom: 10px;
    margin: 0;
    width: 100%; /* 親要素の幅いっぱいに広げる */
    padding: 5px 10px; /* 上下に5px、左右に10pxの余白を設定 */
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    font-size: 1em;
    opacity: 1;
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    transform: translateY(0);
    box-sizing: border-box; /* paddingを含めて幅を計算 */
}

.grid-item:hover h3 {
    opacity: 0;
    transform: translateY(20px);
}

/* 説明文のスタイル */
.grid-item .description {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0; /* 初期は非表示 */
    transition: opacity 0.5s ease-in-out, transform 0.3s ease-in-out;
    padding: 10px;
    text-align: center;
    box-sizing: border-box;
}

.grid-item:hover .description {
    opacity: 1; /* ホバーで表示 */
}



/*オフィス////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECoffice {
    padding: 0.5%;
    overflow-x: hidden;
    background-color: #000;
}

@keyframes infinity-scroll-left {
from {
  transform: translateX(0);
}
  to {
  transform: translateX(-100%);
}
}
@keyframes infinity-scroll-left-shifted {
  from {
    /* 初期位置を左に50%ずらす */
    transform: translateX(-5%);
  }
  to {
    /* 最終位置も同様に左に50%ずらす */
    transform: translateX(-105%); /* -100% + -50% */
  }
}

.scroll-infinity__wrap {
  display: flex;
  overflow: hidden;
}
.scroll-infinity__list {
  display: flex;
  list-style: none;
  padding: 0;
  margin: 0;
}
.scroll-infinity__list--left {
  animation: infinity-scroll-left 60s infinite linear 0.5s both;
}
.scroll-infinity__item {
  width: calc(100vw / 6);
  margin: 0.5%;
}
.scroll-infinity__item>img {
  width: 100%;
}

.sill_delayed {
  animation: infinity-scroll-left-shifted 60s infinite linear 0.5s both;
}

/*ニュース////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECnewsSwipeBox {
    position: relative;
    width: 100%;
    margin: 0 auto;
    overflow: hidden;
    margin-bottom: 20px; /* 下に余白を追加 */
}
.RECnewsscroll-container {
    margin: 0 auto;
    width: 80%;
  position: relative; /* ボタンの配置基準 */
  padding: 0 4rem; /* ボタンをコンテナの外側に配置するための余白 */
}

.RECnewsscroll-content {
  display: flex;
  gap: 2rem; /* コラム要素間のスペース */
  overflow-x: auto; /* 横スクロールを有効にする */
  scrollbar-width: none; /* Firefoxでのスクロールバーを非表示に */
  -ms-overflow-style: none; /* IE/Edgeでのスクロールバーを非表示に */
  scroll-behavior: smooth; /* スクロールを滑らかにする */
}

/* Chrome, Safari, Operaでのスクロールバーを非表示に */
.RECnewsscroll-content::-webkit-scrollbar {
  display: none;
}

/* カードデザイン */
.RECnewscard {
  position: relative;
  min-width: 400px; /* カードの最小幅 */
  height: 200px;
  flex-shrink: 0; /* flexアイテムの幅を縮めない */
  overflow: hidden;
  border-radius: 8px; /* 角を丸くする */
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  cursor:default;
}

.RECnewscard:hover {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1); /* 影をつけて立体感を出す */
}

.RECnewscard img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* 画像の縦横比を維持して要素に合わせる */
  transition: transform 0.3s ease;
}

.RECnewscard:hover img {
  transform: scale(1.05); /* ホバー時に画像を少し拡大 */
}

/* タイトルオーバーレイ */
.card-overlay {
  position: absolute;
  bottom: 0;
  left: -1.5rem;
  width: 100%;
  padding: 1.5rem 1.5rem 1.5rem 0;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0));
  color: #fff;
}

.card-title {
  margin: 0;
  font-size: 1.2rem;
  font-weight: bold;
    text-align: end;
    cursor: pointer;

}

/* スクロールボタン */
.RECnewsscroll-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
  background-color: #fff;
  border: none;
  border-radius: 50%;
  width: 3rem;
  height: 3rem;
  font-size: 1.5rem;
  cursor: pointer;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease, transform 0.3s ease;
}

.RECnewsscroll-button:hover {
  background-color: #f0f0f0;
  transform: translateY(-50%) scale(1.1);
}

.RECnewsprev-button {
  left: 0;
}

.RECnewsnext-button {
  right: 0;
}

.RECnewsButton{
    margin: 0 auto;
    width: 80%;
    padding-top: 1rem;
    padding-bottom: 4rem;
    display: flex;
    justify-content: end;
}






/*ポジション////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECpositionSection{
    background-image: url(static/pattern.jpg);
    background-repeat: repeat;
    height: max-content;
    padding-bottom: 5%;
}
.RECpositionSectionTitleBox{
    height: 175px;
}

.RECpositionSortPanel{
    width: 80%;
    margin: 0 auto;
}


/*FAQ////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECfaqSection{
    /* パターン画像の下に表示する黒い背景色 */
    background-color: #000;
    position: relative;
}
.RECfaqSection::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url('static/lightleak.webp');
    background-repeat: repeat;
    opacity: 0.1; /* ここで不透明度を調整 */
    z-index: 0; /* body要素のコンテンツの下に配置 */
}

.RECfaqSectionTitleBox{
    height: 175px;
}

.accordion {
  width: 80%;
  margin: 0 auto;
}

/* inputのチェックボックスを非表示 */
.accordion-hidden {
  display: none;
}

/* 見出しボタン部分 */
.accordion-open {
  display: block;
  padding: 10px 80px 10px 10px;
  background: #cecece;
  cursor: pointer;
  margin: 5px 0;
  position: relative;
}

/* ＋アイコン */
.accordion-open::before {
    content: '';
    width: 20px;
    height: 3px;
    background: #000;
    position: absolute;
    top: 50%;
    right: 5%;
}
.accordion-open::after {
    content: '';
    width: 20px;
    height: 3px;
    background: #000;
    position: absolute;
    top: 50%;
    right: 5%;
    transform: rotate(90deg);;
}

/* アコーディオン中身部分 */
.accordion-inner {
  display: block;
  height: 0;
  overflow: hidden;
  padding: 0;
  opacity: 0;
  transition: 0.5s;
  /* 表示速度の設定 */
  cursor: pointer;
  color: #ffffff;
}

/* チェックボックスにチェックが入ったら中身部分を表示する */
.accordion-hidden:checked+.accordion-open+.accordion-inner {
  height: auto;
  opacity: 1;
  padding: 10px;
}

.RECfaqSection{
    padding-top: 5rem;
    padding-bottom: 5rem;
}
.faq-container {
    width: 60%;
    margin: 0 auto;
    box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);
    border-radius: 8px;
}

.faq-item {
    border-bottom: 1px solid #ffffff;
    padding: 10px;
}

.faq-question {
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 0;
    font-size: 1.1em;
    font-weight: bold;
    color: #ffffff;
    position: relative;
    user-select: none; /* テキスト選択を無効にする */
}

/* 矢印アイコンを追加 */
.faq-question::after {
    content: '▶'; /* Unicodeで右向きの矢印 */
    font-size: 0.8em;
    margin-left: 10px;
    transition: transform 0.1s ease;
}

/* 質問が開いている時の矢印の向き */
.faq-item.active .faq-question::after {
    transform: rotate(90deg); /* 質問が開くと矢印が下向きになる */
}

.faq-answer {
    max-height: 0; /* 回答を非表示にする */
    overflow: hidden;
    transition: max-height 0.3s ease-out; /* 開閉アニメーション */
    padding: 0 15px;
}

.faq-answer p {
    padding-bottom: 15px;
    margin: 0;
    color: #ffffff;
}

/* 質問が開いた時の回答のスタイル */
.faq-item.active .faq-answer {
    max-height: 200px; /* 十分な高さを設定して回答を表示 */
transition: max-height 0.3s ease-out; /* 開閉アニメーション */
}
/* Q&A追加ここまで */


/*////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/
/* sectiontitle */
.RECsectionTitle{
    display: block;
    position: relative;
    padding-left: 15%;
    height: 100px;
}
.RECsectionTitleBack{
    position: absolute;
    top: 0.05em;
    font-weight: 900;
    font-size: 140px;
    line-height: 0.6em;
    color: rgba(0,0,0,0);
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: rgba(255, 255, 255, 60%);
    z-index: 2;
}
.RECsectionTitleBackground{
    content: '';
    position: absolute;
    background: linear-gradient(0.25turn, #000000, #8C2383, #FF0505);
    width: 700px;
    height: 70px;
    top: 1em;
    overflow: visible;
    z-index: 3;
}
.RECsectionTitleFront{
    position: absolute;
    font-weight: 900;
    font-size: 64px;
    letter-spacing: 0.03em;
    margin-left: 5px;
    color: #ffffff;
    z-index: 4;
}
.RECsectionTitleFrontJP{
    position: absolute;
    font-weight: 600;
    font-size: 24px;
    margin-left: 5px;
    color: #ffffff;
    z-index: 4;
    top: 80%;
}

/* blocktitle */
.RECblockTitle {
    display: flex;
    flex-direction: column;
    padding-left: 15%;
    margin-top: 7rem;
    margin-bottom: 2em;
}
.RECblockTitleLarge {
    font-weight: 700;
    font-size: 96px;
    line-height: 1em;
    color: #f20000;
}
.RECblockTitleSmall {
    font-weight: 700;
    font-size: 36px;
    line-height: 1em;
}

/*パートタイトル*/
.RECpartTitle{
    display: flex;
    flex-direction: column;
    padding-left: 20%;
    margin-top: 4rem;
    margin-bottom: 1rem;
}
.RECpartTitleText{
    position: relative;
    padding-left: 15px;
    font-weight: 700;
    font-size: 36px;
    line-height: 1em;
}
.RECpartTitleText::before{
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;                  /* top/bottom指定で“要素の高さ＝テキストの高さ”に追従 */
    width: 10px;                 /* 線の太さ */
    background: #e60023;        /* 赤色（お好みで） */
    border-radius: 2px;         /* 角を少し丸く（任意） */
}


/*ボタン*/
.RECbutton{
    cursor: pointer;
    margin: auto 0;
    width: 200px;
    font-weight: 700;
    font-size: 1rem;
    line-height: 40px;
    letter-spacing: 0.2em;
    background-color: #B3B3B3;
    color: #ffffff;
    border: none;
    position: relative;
    text-align: start;
    padding-left: 2em;
    transition: 0.3s;

/* 上下左右の余白をCSS変数で管理 */
  --vertical-margin: 20px;
  --horizontal-margin: var(--vertical-margin);

  /* 上下と右の余白に同じ変数を適用 */
  margin-top: var(--vertical-margin);
  margin-bottom: var(--vertical-margin);
  margin-right: var(--horizontal-margin);

  /* 左の余白は自動で中央に配置するため auto に */
  margin-left: auto;
}
.RECbutton:hover{
    background-color: #8c8c8c;
    color: #000000;
    padding-left: 4em;
}
.RECbutton::after{
    content: '';
    position: absolute;
    background: #ffffff;
    width: 50px;
    height: 1px;
    top: 50%;
    right: 0px;
    transition: 0.3s;
}
.RECbutton:hover::after{
    background: #000000;
    width: 60px;
}

.RECbuttonW{
    margin: auto 0;
    width: 200px;
    font-weight: 700;
    font-size: 1rem;
    line-height: 40px;
    letter-spacing: 0.2em;
    background-color: rgba(0,0,0,0%);
    border: solid 1px #ffffff;
    color: #ffffff;
    position: relative;
    text-align: start;
    padding-left: 2em;
    transition: 0.3s;
}
.RECbuttonW:hover{
    color: #ffffff;
    padding-left: 4em;
}
.RECbuttonW::after{
    content: '';
    position: absolute;
    background: #ffffff;
    width: 50px;
    height: 1px;
    top: 50%;
    right: 0px;
    transition: 0.3s;
}
.RECbuttonW:hover::after{
    width: 60px;
}

.RECbuttonB{
    cursor: pointer;
    margin: auto 0;
    width: 200px;
    font-weight: 700;
    font-size: 12px;
    line-height: 40px;
    letter-spacing: 0.2em;
    background-color: rgba(0,0,0,0%);
    border: solid 1px #000000;
    color: #000000;
    position: relative;
    text-align: start;
    padding-left: 40px;
    transition: 0.3s;
}
.RECbuttonB:hover{
    color: #000000;
    padding-left: 50px;
}
.RECbuttonB::after{
    content: '';
    position: absolute;
    background: #000000;
    width: 50px;
    height: 1px;
    top: 50%;
    right: 0px;
    transition: 0.3s;
}
.RECbuttonB:hover::after{
    width: 60px;
}





/*絞り込み//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/
.RECpositionBox {
    margin: 0 auto;
    padding-top: 5rem;
    padding-bottom: 5rem;
    width: 60%;
}
.filters {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
    padding: 20px 30px 20px 30px;
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

.filter-group {
    padding: 15px;
}

.filter-group h3 {
    color: #000000;
    margin-top: 0;
    margin-bottom: 10px;
    border-bottom: 2px solid #eee;
    padding-bottom: 8px;
}

.filter-group label {
    display: block;
    margin-bottom: 10px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    position: relative;
    padding-left: 30px;
}

/* 本来のチェックボックスを非表示にする */
.filter-group label input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* カスタムチェックボックスのデザイン */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: #eee;
    border-radius: 4px;
    transition: background-color 0.2s ease;
}

/* チェックボックスにホバーした時のスタイル */
.filter-group label:hover input ~ .checkmark {
    background-color: #ccc;
}

/* チェックボックスがチェックされた時のスタイル */
.filter-group label input:checked ~ .checkmark {
    background-color: #2196F3;
}

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

.filter-group label input:checked ~ .checkmark:after {
    display: block;
}

.filter-group label .checkmark:after {
    left: 7px;
    top: 3px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

hr {
    border: 0;
    height: 1px;
    background: #ddd;
    margin: 30px 0;
}

.content-list {
    list-style: none;
    padding: 0;
    display: grid;
    /* 2段組にする設定 */
    grid-template-columns: repeat(auto-fit, minmax(calc(50% - 10px), 1fr));
    gap: 20px;
}

.content-item {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
    transition: opacity 0.5s ease-in-out; /* ここをopacityのみに修正 */
    opacity: 1;
    display: block; /* デフォルトの表示をblockに設定 */
}

/* 修正点：hiddenクラスが付与されたらopacityを0にし、display: none;でレイアウトから除外する */
.content-item.hidden {
    opacity: 0;
    pointer-events: none;
    display: none;
}

.content-link {
    text-decoration: none;
    color: inherit;
    display: block;
}

.content-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
}

.content-item.hidden {
    opacity: 0;
    transform: translateY(20px);
    height: 0;
    padding: 0 20px;
    margin-bottom: 0;
}

.content-item h3 {
    margin-top: 0;
    margin-bottom: 10px;
    color: #000000;
}

.content-item p {
    color: #666;
    font-size: 0.9em;
    margin-bottom: 0;
}
